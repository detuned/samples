// responsive example, edit or remove
$break-small: 500px;
$break-large: 1180px;
@mixin respond-to($media) {
	@if $media == pda {
		// narrower than $width
		@media only screen and (max-width: $break-small) { @content; }
	}
	@else if $media == wide {
		// wider than $width
		@media only screen and (min-width: $break-large) { @content; }
	}
}
// retina bg
@mixin retina{
	@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
		@content;
	}
}
@mixin r($media){
	@include respond-to($media);
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
	-moz-transform: rotate($deg + deg);
	-o-transform: rotate($deg + deg);
	-webkit-transform: rotate($deg + deg);
	-ms-transform: rotate($deg + deg);
	transform: rotate($deg + deg);
	filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand');
	zoom: 1;
}

// TRANSITION
@mixin transition($what) {
	-moz-transition:    $what;
	-o-transition:      $what;
	-webkit-transition: $what;
	-ms-transition:     $what;
	transition:         $what;
}
%hide-text{
	font: 0/0 a;
	text-shadow: none;
	color: transparent;
}
%clr{
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
	*zoom: 1;
}
@mixin placeholder-color($color) {
	&:-moz-placeholder {
		color: $color;
	}
	&::-webkit-input-placeholder {
		color: $color;
	}
}

@mixin placeholder() {
	&:-moz-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
}


%gray{
	filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+ */
	filter: gray; /* IE6-9 */
	-webkit-filter: grayscale(100%); /* Chrome 19+ & Safari 6+ */
	filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1);
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)";
}
%gray-half{
	filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'saturate\' values=\'0.5\'/></filter></svg>#grayscale"); /* Firefox 10+ */
	filter: gray alpha(opacity=50); /* IE6-9 */
	-webkit-filter: grayscale(50%); /* Chrome 19+ & Safari 6+ */
}
%gray-zero{
	filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
	-webkit-filter: grayscale(0%);
}
@mixin unselectable() {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
@mixin prevent-text(){
	-ms-word-break: break-all;
	word-break: break-all;
	word-break: break-word;
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	hyphens: auto;
}
@mixin font-smoothing($val: antialiased) {
	-webkit-font-smoothing: $val;
	-moz-font-smoothing: $val;
	-ms-font-smoothing: $val;
	-o-font-smoothing: $val;
}
@mixin selection {
	& ::selection {
		@content;
	}
	& ::-moz-selection {
		@content;
	}
}


@mixin ibm{
	display: inline-block;
	vertical-align: middle;
	}
@mixin ibt{
	display: inline-block;
	vertical-align: top;
	}
@mixin ibb{
	display: inline-block;
	vertical-align: bottom;
	}

// https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html
//
// grayscale ex: filter: grayscale(100%);
// sepia ex: filter: sepia(100%);
// saturate ex: filter: saturate(0%);
// hue-rotate ex: filter: hue-rotate(45deg);
// invert ex: filter: invert(100%);
// brightness ex: filter: brightness(15%);
// contrast ex: filter: contrast(200%);
// blur ex: filter: blur(2px);

@mixin filter($filter-type,$filter-amount) {
	-webkit-filter: $filter-type+unquote('(#{$filter-amount})');
	-moz-filter: $filter-type+unquote('(#{$filter-amount})');
	-ms-filter: $filter-type+unquote('(#{$filter-amount})');
	-o-filter: $filter-type+unquote('(#{$filter-amount})');
	filter: $filter-type+unquote('(#{$filter-amount})');
	}


$svg_grayscale: "data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale";
@mixin grayscale{
	-moz-filter: url($svg_grayscale);
	-o-filter: url($svg_grayscale);
	-webkit-filter: grayscale(100%);
	filter: gray;
	filter: url($svg_grayscale);
	}
@mixin ungrayscale{
	-moz-filter: none;
	-o-filter: none;
	-webkit-filter: none;
	filter: none;
	}

@mixin link-bordered($color:#F00, $hover_color:#000){
	color: $color;
	border-bottom: 1px solid transparentize($color, 0.75);
	text-decoration: none;
	&:hover{
		color: $hover_color;
		border-bottom-color: transparentize($hover_color, 0.5);
		}
	}

%press{
	position:relative;
	cursor: pointer;
	&:active{
		top: 1px;
		}
	}

@mixin abs0{
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	}


